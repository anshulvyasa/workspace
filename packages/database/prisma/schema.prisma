generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  id             String   @id @default(uuid()) @db.Uuid
  createdAt      DateTime @default(now()) @db.Timestamptz()
  workspaceOwner String   @db.Uuid
  title          String
  iconId         String
  data           String?
  inTrash        String?
  logo           String?
  bannerUrl      String?
  folders        Folder[]
  files          Files[]

  @@map("workspaces")
}

model Folder {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz()
  title     String
  iconId    String
  data      String?
  inTrash   String?
  logo      String?
  bannerUrl String?
  folder    Files[]

  workspaceId String    @db.Uuid
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@map("folders")
}

model Files {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz()
  title     String
  iconId    String
  data      String?
  inTrash   String?
  logo      String?
  bannerUrl String?

  workspaceId String    @db.Uuid
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  folderId String @db.Uuid
  folder   Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)

  @@map("files")
}
